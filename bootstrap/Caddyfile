# the main domain
example.com {
  encode zstd gzip

  # load balance between replicas
  reverse_proxy localhost:8000 localhost:8001 {
	lb_policy least_conn
  }


  log {
    output file /var/log/caddy.example.com.log {
        roll_size 20MiB
	roll_keep 2
	roll_keep_for 720h
    }
  }
}

www.example.com {
  redir https://example.com{uri} permanent
}

# reverse connections to the port 5000
:5000 {
  encode zstd gzip

  # load balance between replicas
  reverse_proxy localhost:8000 localhost:8001 {
	lb_policy least_conn
  }


  log {
    output file /var/log/caddy.port5000.log {
        roll_size 20MiB
	roll_keep 2
	roll_keep_for 720h
    }
  }
}

# a subdomain
demoapp.example.com {
  encode zstd gzip

  # add basic auth to the app
  # 1. run the command: caddy hash-password
  # 2. enter the password
  # 3. copy the hash and replace <hash> below
  # 4. replace <user> with the username you want
  #
  # basicauth {
  #     <user> <hash>
  # }

  # create a match for your personal, public IP address
  # 1. get your public IP from: https://www.whatsmyip.org/
  # 2. replace <ipaddr> below with your IP
  # 3. add as many IPs as you want to allow, separated by a space
  @allowedips {
      remote_ip <ipaddr>
    }

  # create a matcher for every IP that is NOT in the list
  # add to the list the IPs you don't want blocked
  # (probably the same list as before)
  @noallow {
      not remote_ip <ipaddr> <ipaddr>
    }

  # send a 404 to every IP that is not allowed
  respond @noallow 404


  # reverse proxy the allow IPs to your app
  reverse_proxy @allowedips localhost:8000

  log {
        output file /var/log/caddy.demoapp.example.com.log {
            roll_size 20MiB
	    roll_keep 2
	    roll_keep_for 720h
    }
  }
}
